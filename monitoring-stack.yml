version: '3'

services:

  portainer:
    image: portainer/portainer
    command: >
      -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    networks:
      - my_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer
    ports:
      - 9001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  elasticsearch:
    image: elasticsearch
    ports:
      - 9200:9200
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - my_network
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  logstash:
    image: logstash
    volumes:
      - /opt/apps/logstash/conf:/conf
    networks:
      - my_network
    environment:
      - LOGSPOUT=ignore
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    command: logstash -f /conf/logstash.conf
    depends_on:
      - elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  kibana:
    image: kibana
    ports:
      - 5601:5601
    networks:
      - my_network
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  logspout:
    image: gliderlabs/logspout
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network
    environment:
      - SYSLOG_FORMAT=rfc3164
    command: syslog://logstash:51415
    depends_on:
      - logstash
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    command: -logtostderr -docker_only -storage_driver=stdout
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - my_network
    depends_on:
      - elasticsearch
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

volumes:
  portainer:
    driver: local
  elasticsearch:
    driver: local

networks:
  my_network: